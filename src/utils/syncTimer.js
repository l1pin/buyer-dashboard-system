// src/utils/syncTimer.js
// –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–∞–π–º–µ—Ä –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

class SyncTimer {
  constructor(interval = 5000) {
    this.interval = interval;
    this.callbacks = new Set();
    this.timerId = null;
    this.isRunning = false;
  }

  // –í—ã—á–∏—Å–ª–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ "–∫—Ä—É–≥–ª–æ–≥–æ" –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
  getDelayToNextInterval() {
    const now = Date.now();
    const msIntoInterval = now % this.interval;
    const delay = this.interval - msIntoInterval;
    
    console.log(`‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${new Date(now).toLocaleTimeString()}.${now % 1000}`);
    console.log(`‚è∞ –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: ${delay}ms`);
    console.log(`‚è∞ –°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—É—Å–∫: ${new Date(now + delay).toLocaleTimeString()}.${(now + delay) % 1000}`);
    
    return delay;
  }

  // –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–∞–π–º–µ—Ä
  start() {
    if (this.isRunning) {
      console.warn('‚ö†Ô∏è –¢–∞–π–º–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω');
      return;
    }

    console.log(`üöÄ –ó–∞–ø—É—Å–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞ (–∏–Ω—Ç–µ—Ä–≤–∞–ª: ${this.interval}ms)`);
    
    // –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ - –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ "–∫—Ä—É–≥–ª–æ–º—É" –≤—Ä–µ–º–µ–Ω–∏
    const initialDelay = this.getDelayToNextInterval();
    
    setTimeout(() => {
      console.log('‚ö° –°–ò–ù–•–†–û–ù–ù–´–ô –ó–ê–ü–£–°–ö! –í—Ä–µ–º—è:', new Date().toLocaleTimeString());
      this.executeCallbacks();
      
      // –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω—ã–π —Ç–∞–π–º–µ—Ä
      this.timerId = setInterval(() => {
        console.log('‚ö° –°–ò–ù–•–†–û–ù–ù–´–ô –ó–ê–ü–£–°–ö! –í—Ä–µ–º—è:', new Date().toLocaleTimeString());
        this.executeCallbacks();
      }, this.interval);
      
      this.isRunning = true;
    }, initialDelay);
  }

  // –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–∞–π–º–µ—Ä
  stop() {
    if (this.timerId) {
      clearInterval(this.timerId);
      this.timerId = null;
    }
    this.isRunning = false;
    console.log('‚èπÔ∏è –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–∞–π–º–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  }

  // –î–æ–±–∞–≤–∏—Ç—å callback
  subscribe(callback) {
    this.callbacks.add(callback);
    console.log(`‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞. –í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å–æ–∫: ${this.callbacks.size}`);
  }

  // –£–¥–∞–ª–∏—Ç—å callback
  unsubscribe(callback) {
    this.callbacks.delete(callback);
    console.log(`‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —É–¥–∞–ª–µ–Ω–∞. –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–¥–ø–∏—Å–æ–∫: ${this.callbacks.size}`);
    
    // –ï—Å–ª–∏ –±–æ–ª—å—à–µ –Ω–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ - –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
    if (this.callbacks.size === 0) {
      this.stop();
    }
  }

  // –í—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ callbacks
  executeCallbacks() {
    this.callbacks.forEach(callback => {
      try {
        callback();
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ callback:', error);
      }
    });
  }

  // –ü–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞
  getTimeToNextTick() {
    if (!this.isRunning) return null;
    return this.getDelayToNextInterval();
  }
}

// Singleton instance –¥–ª—è Trello –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
export const trelloSyncTimer = new SyncTimer(5000); // 5 —Å–µ–∫—É–Ω–¥

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä—É–≥–∏—Ö —Ç–∞–π–º–µ—Ä–æ–≤
export default SyncTimer;
