export default async (request, context) => {
  console.log('üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–µ—à–∞ –º–µ—Ç—Ä–∏–∫ –≤ 04:00');
  
  try {
    const siteUrl = new URL(request.url).origin;
    const response = await fetch(`${siteUrl}/.netlify/functions/update-all-metrics`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' }
    });

    if (!response.ok) {
      throw new Error(`HTTP ${response.status}`);
    }

    const result = await response.json();
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –≤–∏–¥–µ–æ: ${result.updated}, –æ—à–∏–±–æ–∫: ${result.failed}`);

    return new Response(JSON.stringify(result), {
      status: 200,
      headers: { 'Content-Type': 'application/json' }
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error);
    return new Response(JSON.stringify({ error: error.message }), {
      status: 500,
      headers: { 'Content-Type': 'application/json' }
    });
  }
};

export const config = {
  schedule: '0 1 * * *' // 04:00 –ø–æ –ö–∏–µ–≤—É (–∑–∏–º–Ω–µ–µ –≤—Ä–µ–º—è) = 01:00 UTC, 03:00 UTC (–ª–µ—Ç–Ω–µ–µ –≤—Ä–µ–º—è) = 04:00 –ö–∏–µ–≤
};
